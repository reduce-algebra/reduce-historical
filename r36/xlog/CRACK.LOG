REDUCE 3.6, 15-Jul-95, patched to 6 Mar 96 ...


load_package crackapp;

  % Needed for these tests.

% Initial load up list
off echo$

..........................................................................
An example of the determination of point symmetries for ODEs

--------------------------------------------------------------------------

This is LIEPDE - a program for calculating infinitesimal symmetries
of single ODEs/PDEs and ODE/PDE - systems

The ODE/PDE (-system) under investigation is :

               4            3                      2
0 = df(y,x,2)*x  - df(y,x)*x  - 2*df(y,x)*x*y + 4*y

for the function(s) : 

y(x)  


time to formulate conditions: 190 ms    GC time : 0 ms

This is CRACK - a solver for overdetermined partial differential equations
Version 1995-03-20
**************************************************************************

equations: expr. with 21 terms

functions: eta_y(y,x)  xi_x(y,x)  
separation w.r.t. y|1  
new function: c1(x)  
new function: c2(x)  
integrated equation :  
0=c1 + c2*y + xi_x


separation yields 4 equations
substitution :  
xi_x= - c1 - c2*y

eta_y(y,x)  
xi_x= - c1 - c2*y


new function: c3(x)  
new function: c4(x)  
new function: c5(x)  
new function: c6(x)  
integrated equation :  
              3  2         2  2         3                            3
0=3*df(c2,x)*x *y  + 3*c2*x *y  + 2*c2*y  + 3*c5 + 3*c6*y + 3*eta_y*x


substitution :  
                      3  2         2  2         3
        - 3*df(c2,x)*x *y  - 3*c2*x *y  - 2*c2*y  - 3*c5 - 3*c6*y
eta_y=------------------------------------------------------------
                                     3
                                  3*x


                      3  2         2  2         3
        - 3*df(c2,x)*x *y  - 3*c2*x *y  - 2*c2*y  - 3*c5 - 3*c6*y
eta_y=------------------------------------------------------------
                                     3
                                  3*x


xi_x= - c1 - c2*y


separation w.r.t. y  
separation yields 4 equations
substitution :  
c2=0


        - c5 - c6*y
eta_y=--------------
             3
            x


xi_x= - c1


substitution :  
                3         2
c6= - df(c1,x)*x  + 3*c1*x


                 3           2
       df(c1,x)*x *y - 3*c1*x *y - c5
eta_y=--------------------------------
                      3
                     x


xi_x= - c1


substitution :  
                     6               5         4
     - 3*df(c1,x,2)*x  + 5*df(c1,x)*x  - 5*c1*x
c5=----------------------------------------------
                         2


                     4               3                          2
       3*df(c1,x,2)*x  - 5*df(c1,x)*x  + 2*df(c1,x)*x*y + 5*c1*x  - 6*c1*y
eta_y=---------------------------------------------------------------------
                                       2*x


xi_x= - c1


separation w.r.t. y  
new constant: c7
new constant: c8
integrated equation :  
0=log(x)*c8*x - c1 + c7*x


new constant: c9
new constant: c10
new constant: c11
integrated equation :  
                           3
0=log(x)*c10*x - c1 + c11*x  + c9*x


new constant: c12
new constant: c13
new constant: c14
new constant: c15
integrated equation :  
   2/3      2               2               2
0=x   *c14*x  + log(x)*c13*x  - c1*x + c12*x  + c15


separation yields 3 equations
substitution :  
c1=log(x)*c8*x + c7*x


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


separation w.r.t. x  
linear independent expressions : 
x*log(x)


 3
x


x


separation yields 3 equations
substitution :  
c11=0


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


separation w.r.t. x  
linear independent expressions : 
 2  2/3
x *x


 2
x *log(x)


 2
x


1


separation yields 4 equations
substitution :  
c14=0


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


substitution :  
c15=0


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


substitution :  
c12=c7


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


substitution :  
c13=c8


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


substitution :  
c10=c8


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


substitution :  
c9=c7


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y


xi_x= - log(x)*c8*x - c7*x


End of this CRACK run

The solution : 
xi_x= - log(x)*c8*x - c7*x


                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y

Free functions or constants : c7  c8  
**************************************************************************


CRACK needed :  2080 ms    GC time : 250 ms


Remaining free functions after the last CRACK-run:
c7  c8  


The symmetries are:

xi_x= - log(x)*c8*x - c7*x

                                      2
eta_y= - 2*log(x)*c8*y - 2*c7*y - c8*x  + c8*y

with c7  c8  which are free.
..........................................................................
An example of the determination of point symmetries for PDEs

--------------------------------------------------------------------------

This is LIEPDE - a program for calculating infinitesimal symmetries
of single ODEs/PDEs and ODE/PDE - systems

The ODE/PDE (-system) under investigation is :

0 = df(u,x,2) - df(u,y)

for the function(s) : 

u(y,x)  


time to formulate conditions: 170 ms    GC time : 0 ms

This is CRACK - a solver for overdetermined partial differential equations
Version 1995-03-20
**************************************************************************

equations: 
0= - 2*df(xi_y,u)*u|1 - 2*df(xi_y,x)


functions: eta_u(u,y,x)  xi_y(u,y,x)  xi_x(u,y,x)  
separation w.r.t. u|1  
new function: c18(u,y)  
new function: c19(u,y)  
integrated equation :  
0=c19 + xi_y


new function: c20(y,x)  
new function: c21(y,x)  
integrated equation :  
0=c21 + xi_y


separation yields 2 equations
substitution :  
xi_y= - c21

eta_u(u,y,x)  
xi_y= - c21

xi_x(u,y,x)  
generalized separation 
new function: c22(y)  
new function: c23(y)  
separation yields 3 equations
substitution :  
c21=c22

eta_u(u,y,x)  
xi_y= - c22

xi_x(u,y,x)  
substitution :  
c19=c22

eta_u(u,y,x)  
xi_y= - c22

xi_x(u,y,x)  
substitution :  
c22= - c23

eta_u(u,y,x)  
xi_y=c23

xi_x(u,y,x)  
End of this CRACK run

The solution : 
xi_y=c23

Free functions or constants : xi_x(u,y,x)  eta_u(u,y,x)  c23(y)  
**************************************************************************


CRACK needed :  120 ms    GC time : 0 ms


Remaining free functions after the last CRACK-run:
xi_x(u,y,x)  eta_u(u,y,x)  c23(y)  


time to formulate conditions: 100 ms    GC time : 0 ms

This is CRACK - a solver for overdetermined partial differential equations
Version 1995-03-20
**************************************************************************

equations: expr. with 12 terms

functions: xi_x(u,y,x)  eta_u(u,y,x)  c23(y)  
separation w.r.t. u|1  
separation w.r.t. u|2  
separation w.r.t. u|2  
new function: c24(y,x)  
new function: c25(y,x)  
new function: c26(y,x)  
new function: c27(y,x)  
integrated equation :  
0=c26 + c27*u + xi_x


new function: c28(y,x)  
integrated equation :  
0=df(eta_u,u) - 2*df(xi_x,x) + c28


new function: c29(y,x)  
new function: c30(y,x)  
integrated equation :  
0=c30 + xi_x


new function: c31(u,y)  
new function: c32(u,y)  
integrated equation :  
0=df(c23,y)*x + c32 - 2*xi_x


separation yields 6 equations
substitution :  
xi_x= - c30


xi_x= - c30

eta_u(u,y,x)  c23(y)  
generalized separation 
new function: c33(y)  
new function: c34(y)  
separation yields 3 equations
substitution :  
c32= - c34


xi_x= - c30

eta_u(u,y,x)  c23(y)  
substitution :  
      - df(c23,y)*x + c34
c30=----------------------
              2


      df(c23,y)*x - c34
xi_x=-------------------
              2

eta_u(u,y,x)  c23(y)  
substitution :  
c33= - c34


      df(c23,y)*x - c34
xi_x=-------------------
              2

eta_u(u,y,x)  c23(y)  
new function: c35(x,y)  
new function: c36(x,y)  
integrated equation :  
0=df(c23,y)*u - c28*u + c36 - eta_u


substitution :  
eta_u=df(c23,y)*u - c28*u + c36


      df(c23,y)*x - c34
xi_x=-------------------
              2


eta_u=df(c23,y)*u - c28*u + c36

c23(y)  
new function: c37(y)  
new function: c38(y)  
integrated equation :  
               2
0=df(c23,y,2)*x  - 2*df(c34,y)*x - 8*c28 + 2*c38


substitution :  
                  2
     df(c23,y,2)*x  - 2*df(c34,y)*x + 2*c38
c28=----------------------------------------
                       8


      df(c23,y)*x - c34
xi_x=-------------------
              2


                         2
        - df(c23,y,2)*u*x  + 8*df(c23,y)*u + 2*df(c34,y)*u*x + 8*c36 - 2*c38*u
eta_u=-------------------------------------------------------------------------
                                          8

c23(y)  
separation w.r.t. u  
separation yields 2 equations
substitution :  
c27=0


      df(c23,y)*x - c34
xi_x=-------------------
              2


                         2
        - df(c23,y,2)*u*x  + 8*df(c23,y)*u + 2*df(c34,y)*u*x + 8*c36 - 2*c38*u
eta_u=-------------------------------------------------------------------------
                                          8

c23(y)  
separation w.r.t. u  
separation w.r.t. x  
new constant: c39
new constant: c40
new constant: c41
new constant: c42
new constant: c43
new constant: c44
integrated equation :  
                       2
0=2*c23 + 2*c42 + c43*y  + 2*c44*y


new constant: c45
new constant: c46
new constant: c47
new constant: c48
integrated equation :  
0=c34 + c47 + c48*y


new constant: c49
integrated equation :  
0=5*df(c23,y) - c38 + c49


separation yields 4 equations
substitution :  
c34= - c47 - c48*y


      df(c23,y)*x + c47 + c48*y
xi_x=---------------------------
                  2


                         2
        - df(c23,y,2)*u*x  + 8*df(c23,y)*u + 8*c36 - 2*c38*u - 2*c48*u*x
eta_u=-------------------------------------------------------------------
                                       8

c23(y)  
substitution :  
      - df(c23,y)*x - c47 - c48*y
c26=------------------------------
                  2


      df(c23,y)*x + c47 + c48*y
xi_x=---------------------------
                  2


                         2
        - df(c23,y,2)*u*x  + 8*df(c23,y)*u + 8*c36 - 2*c38*u - 2*c48*u*x
eta_u=-------------------------------------------------------------------
                                       8

c23(y)  
substitution :  
                     2
      - 2*c42 - c43*y  - 2*c44*y
c23=-----------------------------
                  2


       - c43*x*y - c44*x + c47 + c48*y
xi_x=----------------------------------
                     2


                                2
       8*c36 - 2*c38*u + c43*u*x  - 8*c43*u*y - 8*c44*u - 2*c48*u*x
eta_u=--------------------------------------------------------------
                                    8


                     2
      - 2*c42 - c43*y  - 2*c44*y
c23=-----------------------------
                  2


substitution :  
c38= - 5*c43*y - 5*c44 + c49


       - c43*x*y - c44*x + c47 + c48*y
xi_x=----------------------------------
                     2


                      2
       8*c36 + c43*u*x  + 2*c43*u*y + 2*c44*u - 2*c48*u*x - 2*c49*u
eta_u=--------------------------------------------------------------
                                    8


                     2
      - 2*c42 - c43*y  - 2*c44*y
c23=-----------------------------
                  2


decoupling: 
c36


new equations: 
End of this CRACK run

The solution : 
                     2
      - 2*c42 - c43*y  - 2*c44*y
c23=-----------------------------
                  2


                      2
       8*c36 + c43*u*x  + 2*c43*u*y + 2*c44*u - 2*c48*u*x - 2*c49*u
eta_u=--------------------------------------------------------------
                                    8


       - c43*x*y - c44*x + c47 + c48*y
xi_x=----------------------------------
                     2

Remaining conditions : 
0=df(c36,x,2) - df(c36,y)

for the functions : c42  c47  c48  c43  c44  
c49  c36(x,y)  
**************************************************************************


CRACK needed :  980 ms    GC time : 110 ms


Remaining free functions after the last CRACK-run:
c42  c47  c48  c43  c44  
c49  c36(x,y)  


Free constants and/or functions have been rescaled.

The symmetries are:

xi_x= - 4*c43*x*y - 2*c44*x + c47 + 2*c48*y

                     2
xi_y= - c42 - 4*c43*y  - 4*c44*y

                   2
eta_u=c36 + c43*u*x  + 2*c43*u*y + c44*u - c48*u*x - c49*u

with c42  c47  c48  c43  c44  
c49  c36(x,y)  
which still have to satisfy: 

0=df(c36,x,2) - df(c36,y)

..........................................................................
An example of the determination of first integrals of ODEs


Determination of a first integral for: 

                  2  2                2
           df(y,x) *x  - 2*df(y,x) - y
df(y,x,2)=------------------------------
                        x

new function: h_0(y,x)  
new function: h_1(y,x)  
new function: h_2(y,x)  
                    2
of the type: df(y,x) *h_2 + df(y,x)*h_1 + h_0

This is CRACK - a solver for overdetermined partial differential equations
Version 1995-03-20
**************************************************************************

equations: expr. with 13 terms

functions: h_2(y,x)  h_1(y,x)  h_0(y,x)  
separation w.r.t. d_y(1)  
new function: c50(x)  
integrated equation :  
   2*x*y
0=e     *h_2 - c50


separation yields 4 equations
substitution :  
      c50
h_2=--------
      2*x*y
     e


      c50
h_2=--------
      2*x*y
     e

h_1(y,x)  h_0(y,x)  
substitution :  
     df(h_0,x)*x
h_1=-------------
          2
         y


      c50
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
new function: c51(x)  
integrated equation :  
               2    2*x*y            3    x*y      3  2            3          2
0=df(c50,x)*x*y  - e     *df(h_0,x)*x  + e   *c51*x *y  - 2*c50*x*y  - 6*c50*y


decoupling: 
h_0


new equations: expr. with 10 terms
with leading derivative (df h_0 x 3) replaces a de with (df h_0 y)
expr. with 20 terms
with leading derivative (df h_0 x 2) replaces a de with (df h_0 x 3)
expr. with 17 terms
with leading derivative (df h_0 x) replaces a de with (df h_0 x 2)

equations: expr. with 13 terms

   2*x*y              2    2*x*y                2*x*y              2          4
0=e     *df(h_0,x,2)*x  - e     *df(h_0,x)*x + e     *df(h_0,y)*x*y  - 2*c50*y


               2    2*x*y            3    x*y      3  2            3          2
0=df(c50,x)*x*y  - e     *df(h_0,x)*x  + e   *c51*x *y  - 2*c50*x*y  - 6*c50*y


functions: 
      c50
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  c51(x)  c50(x)  
separation w.r.t. y  
linear independent expressions : 
1


y


 2
y


 x*y
e


   x*y
y*e


new constant: c52
integrated equation :  
0=c51 - c52*x


new constant: c53
new constant: c54
integrated equation :  
0=c51 + c53 + c54*x


new constant: c55
integrated equation :  
             4
0=c50 - c55*x


new constant: c56
new constant: c57
integrated equation :  
              4              4
0=log(x)*c57*x  - c50 + c56*x


new constant: c58
new constant: c59
new constant: c60
integrated equation :  
             6        4        3
0=c50 - c58*x  - c59*x  - c60*x


separation yields 5 equations
substitution :  
c51=c52*x


      c50
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
separation w.r.t. x  
separation yields 2 equations
substitution :  
c53=0


      c50
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
substitution :  
         4
c50=c55*x


          4
     c55*x
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
separation w.r.t. x  
linear independent expressions : 
 4
x *log(x)


 4
x


separation yields 2 equations
substitution :  
c57=0


          4
     c55*x
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
new function: c61(y)  
substitution :  
c56=c55


          4
     c55*x
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
substitution :  
c54= - c52


          4
     c55*x
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
separation w.r.t. x  
separation yields 3 equations
substitution :  
c60=0


          4
     c55*x
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
substitution :  
c58=0


          4
     c55*x
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
substitution :  
c59=c55


          4
     c55*x
h_2=--------
      2*x*y
     e


     df(h_0,x)*x
h_1=-------------
          2
         y

h_0(y,x)  
decoupling: 
h_0


new equations: 
new function: c62(y)  
new function: c63(y)  
new function: c64(y)  
new function: c65(y)  
integrated equation :  expr. with 10 terms

substitution :  
      2*sqrt(2)*x*y + 2*x*y                  sqrt(2)*x*y + 2*x*y
h_0=(e                     *sqrt(2)*c62 - 2*e                   *c65*y

           sqrt(2)*x*y + x*y        2      sqrt(2)*x*y + x*y
      - 2*e                 *c52*x*y  - 2*e                 *c52*y

           sqrt(2)*x*y      2  3      sqrt(2)*x*y        2
      + 2*e           *c55*x *y  + 4*e           *c55*x*y

           sqrt(2)*x*y          2*x*y                  sqrt(2)*x*y + 2*x*y
      + 2*e           *c55*y - e     *sqrt(2)*c63)/(2*e                   *y)


          4
     c55*x
h_2=--------
      2*x*y
     e


      2*sqrt(2)*x*y + 2*x*y          sqrt(2)*x*y + x*y      2  2
h_1=(e                     *c62*x + e                 *c52*x *y

           sqrt(2)*x*y      3  3      sqrt(2)*x*y      2  2    2*x*y
      - 2*e           *c55*x *y  - 2*e           *c55*x *y  + e     *c63*x)/(

    sqrt(2)*x*y + 2*x*y  2
   e                   *y )


h_0= expr. with 9 terms

equations: 
    2*sqrt(2)*x*y + 2*x*y        2*x*y
   e                     *c62 + e     *c63
0=-----------------------------------------
                 sqrt(2)*x*y
                e

expr. with 12 terms

functions: 
          4
     c55*x
h_2=--------
      2*x*y
     e


      2*sqrt(2)*x*y + 2*x*y          sqrt(2)*x*y + x*y      2  2
h_1=(e                     *c62*x + e                 *c52*x *y

           sqrt(2)*x*y      3  3      sqrt(2)*x*y      2  2    2*x*y
      - 2*e           *c55*x *y  - 2*e           *c55*x *y  + e     *c63*x)/(

    sqrt(2)*x*y + 2*x*y  2
   e                   *y )


h_0= expr. with 9 terms
c62(y)  c63(y)  c65(y)  
separation w.r.t. x  
linear independent expressions : 
 2*x*y + 2*sqrt(2)*x*y
e


 2*x*y
e


separation yields 2 equations
substitution :  
c62=0


          4
     c55*x
h_2=--------
      2*x*y
     e


      sqrt(2)*x*y + x*y      2  2      sqrt(2)*x*y      3  3
h_1=(e                 *c52*x *y  - 2*e           *c55*x *y

           sqrt(2)*x*y      2  2    2*x*y          sqrt(2)*x*y + 2*x*y  2
      - 2*e           *c55*x *y  + e     *c63*x)/(e                   *y )


           sqrt(2)*x*y + 2*x*y            sqrt(2)*x*y + x*y        2
h_0=( - 2*e                   *c65*y - 2*e                 *c52*x*y

           sqrt(2)*x*y + x*y            sqrt(2)*x*y      2  3
      - 2*e                 *c52*y + 2*e           *c55*x *y

           sqrt(2)*x*y        2      sqrt(2)*x*y          2*x*y
      + 4*e           *c55*x*y  + 2*e           *c55*y - e     *sqrt(2)*c63)/(2

     sqrt(2)*x*y + 2*x*y
   *e                   *y)


substitution :  
c63=0


          4
     c55*x
h_2=--------
      2*x*y
     e


      x*y      2          3            2
     e   *c52*x  - 2*c55*x *y - 2*c55*x
h_1=-------------------------------------
                    2*x*y
                   e


         2*x*y        x*y            x*y            2  2
      - e     *c65 - e   *c52*x*y - e   *c52 + c55*x *y  + 2*c55*x*y + c55
h_0=-----------------------------------------------------------------------
                                     2*x*y
                                    e


new constant: c66
integrated equation :  
0=c65 + c66


substitution :  
c65= - c66


          4
     c55*x
h_2=--------
      2*x*y
     e


      x*y      2          3            2
     e   *c52*x  - 2*c55*x *y - 2*c55*x
h_1=-------------------------------------
                    2*x*y
                   e


      2*x*y        x*y            x*y            2  2
     e     *c66 - e   *c52*x*y - e   *c52 + c55*x *y  + 2*c55*x*y + c55
h_0=--------------------------------------------------------------------
                                    2*x*y
                                   e


End of this CRACK run

The solution : 
      2*x*y        x*y            x*y            2  2
     e     *c66 - e   *c52*x*y - e   *c52 + c55*x *y  + 2*c55*x*y + c55
h_0=--------------------------------------------------------------------
                                    2*x*y
                                   e


      x*y      2          3            2
     e   *c52*x  - 2*c55*x *y - 2*c55*x
h_1=-------------------------------------
                    2*x*y
                   e


          4
     c55*x
h_2=--------
      2*x*y
     e

Free functions or constants : c52  c55  c66  
**************************************************************************


CRACK needed :  8530 ms    GC time : 570 ms
                              2      4    x*y              2
A first integral is:  (df(y,x) *c55*x  + e   *df(y,x)*c52*x

                     3                    2    x*y            x*y
    - 2*df(y,x)*c55*x *y - 2*df(y,x)*c55*x  - e   *c52*x*y - e   *c52

           2  2                     2*x*y
    + c55*x *y  + 2*c55*x*y + c55)/e

and an integrating factor:  

  2                 2    x*y
 x *(2*df(y,x)*c55*x  + e   *c52 - 2*c55*x*y - 2*c55)
------------------------------------------------------
                         2*x*y
                        e

free constants: c52  c55  
..........................................................................
An example of the determination of a Lagrangian for an ODE  
Determination of a Lagrangian L for:

                 2
df(y,x,2)=x + 6*y

                        2
The ansatz:  L = df(y,x) *u_ + v_

This is CRACK - a solver for overdetermined partial differential equations
Version 1995-03-20
**************************************************************************

equations: 
           2                                                           2
0= - d_y(1) *df(u_,y) - 2*d_y(1)*df(u_,x) + df(v_,y) - 2*u_*x - 12*u_*y


functions: u_(y,x)  v_(y,x)  
separation w.r.t. d_y(1)  
new function: c67(y)  
new function: c68(y)  
integrated equation :  
0=c68 + u_


new function: c69(x)  
new function: c70(x)  
integrated equation :  
0=c70 + u_


separation yields 3 equations
substitution :  
u_= - c70


u_= - c70

v_(y,x)  
generalized separation 
new constant: c71
new constant: c72
separation yields 3 equations
substitution :  
c68= - c71


u_= - c70

v_(y,x)  
substitution :  
c70= - c71


u_=c71

v_(y,x)  
substitution :  
c71= - c72


u_= - c72

v_(y,x)  
new function: c73(x)  
new function: c74(x)  
integrated equation :  
                     3
0=2*c72*x*y + 4*c72*y  + c74 + v_


substitution :  
                         3
v_= - 2*c72*x*y - 4*c72*y  - c74


u_= - c72


                         3
v_= - 2*c72*x*y - 4*c72*y  - c74


End of this CRACK run

The solution : 
                         3
v_= - 2*c72*x*y - 4*c72*y  - c74


u_= - c72

Free functions or constants : c74(x)  c72  
**************************************************************************


CRACK needed :  240 ms    GC time : 0 ms
                                 2             2
The solution:  L =  - (2*(x + 2*y )*y + df(y,x) )
..........................................................................
An example of the factorization of an ODE  
Differential factorization of:  

                  2                    2
           df(y,x)  - df(y,x)*f*y - q*y
df(y,x,2)=-------------------------------
                         y

The ansatz: df(y,x) = a#*y + b#

This is CRACK - a solver for overdetermined partial differential equations
Version 1995-03-20
**************************************************************************

equations: 
            2                                2     2               2
0=df(a#,x)*y  + df(b#,x)*y - a#*b#*y + a#*f*y  - b#  + b#*f*y + q*y


functions: a#(x)  b#(x)  
separation w.r.t. y  
new constant: c75
integrated equation :  
   int(f,x)           int(f,x)
0=e        *a# + int(e        *q,x) - c75


separation yields 3 equations
substitution :  
b#=0

a#(x)  
b#=0


substitution :  
            int(f,x)
     - int(e        *q,x) + c75
a#=-----------------------------
              int(f,x)
             e


            int(f,x)
     - int(e        *q,x) + c75
a#=-----------------------------
              int(f,x)
             e


b#=0


End of this CRACK run

The solution : 
b#=0


            int(f,x)
     - int(e        *q,x) + c75
a#=-----------------------------
              int(f,x)
             e

Free functions or constants : c75  
**************************************************************************


CRACK needed :  530 ms    GC time : 0 ms
                            int(f,x)
                     int(1/e        ,x)*c75
                    e                      *c76
The solution y=--------------------------------------
                          int(f,x)       int(f,x)
                 int(int(e        *q,x)/e        ,x)
                e

is the general solution of the original ODE
(TIME:  crack 23309 24969)
