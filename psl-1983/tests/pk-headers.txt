21-Feb-83 10:59:57-MST,50099;000000000001
Return-path: <hplabs!GRISS@HP-HULK>
Received: from UTAH-CS by UTAH-20; Mon 21 Feb 83 10:57:48-MST
Date: 20 Feb 1983 1725-PST
From: hplabs!GRISS@HP-HULK
Subject: PK headers
To: kessler@hp-venus
cc: swanson@hp-venus

The following may be of interest, in converting TEST series to bootstrap;
Im still working on the program:
 8333 lines, 655 procedures found
!%CLEAR!-CATCH!-STACK();                              PK:CATCH-THROW 151/18
!%RECLAIM();                                          PK:COPYING-GC  61/2
!%RECLAIM();  % GARBAGE COLLECTOR                     PK:COMPACTING- 164/2
!%THROW(TAG, VALUE);                                  PK:CATCH-THROW 154/19
!%UNCATCH PREVIOUS;                                   PK:CATCH-THROW 147/17
!*CATCH U;                                            PK:CATCH-THROW 72/5
!*THROW(X,Y);                                         PK:CATCH-THROW 75/6
ABS U;   %. ABSOLUTE VALUE OF NUMBER                  PK:EASY-SL     173/23
ACONC(U, V); %. DESTRUCTIVELY ADD ELEMENT V TO THE TA PK:EASY-NON-SL 275/45
ADDTOOBLIST U;                                        PK:OBLIST      43/1
ADJOIN(ELEMENT, ASET); %. ADD ELEMENT TO SET          PK:SETS        22/3
ADJOINQ(ELEMENT, ASET); %. EQ VERSION OF ADJOIN       PK:SETS        25/4
AND U;   %. SEQUENTIALLY EVALUATE UNTIL NIL           PK:EASY-SL     128/15
ANS N;   %. RETURN NTH OUTPUT                         PK:TOP-LOOP    151/7
APPEND(U, V);  %. COMBINE 2 LISTS                     PK:EASY-SL     232/37
APPLY(FN, ARGS);  %. INDIRECT FUNCTION CALL           PK:EVAL-APPLY  89/3
ASS(F, U, V); %. GENERALIZED ASSOC, F IS COMPARISON F PK:EASY-NON-SL 174/28
ASSOC(U, V);  %. RETURN FIRST (U . XXX) IN V, OR NIL  PK:EASY-SL     251/38
ATOM U;   %. IS U A NON PAIR?                         PK:EASY-SL     35/1
ATSOC(U, V);  %. EQ VERSION OF ASSOC                  PK:EASY-NON-SL 169/27
BACKTRACE();                                          PK:BACKTRACE   26/2
BACKTRACE1(ITEM, CODE);                               PK:BACKTRACE   64/5
BACKTRACERANGE(STARTING, ENDING, INTERPFLAG);         PK:BACKTRACE   33/3
BIGFLOATFIX N;                                        PK:ARITHMETIC  220/12
BIGP U;   %. IS U A BIGNUM?                           PK:KNOWN-TO-CO 29/4
BLDMSG(FORMAT, ARG1, ARG2, ARG3, ARG4); %. PRINT TO S PK:PRINTF      174/6
BOTHTIMES U;  %. EVALUATE AT COMPILE AND LOAD TIME    PK:EVAL-WHEN   28/3
BR L;   %. BREAK FUNCTIONS IN L                       PK:MINI-TRACE  197/13
BR!.1 NAM;   % CALLED TO TRACE A SINGLE FUNCTION      PK:MINI-TRACE  162/11
BR!.PRC(PN, B, A);  % CALLED IN PLACE OF "BROKEN" COD PK:MINI-TRACE  128/10
BREAK();   %. ENTER TOP LOOP WITHIN EVALUATION        PK:BREAK       31/1
BREAKCONTINUE();                                      PK:BREAK       73/4
BREAKEDIT();                                          PK:BREAK       93/8
BREAKERRMSG();                                        PK:BREAK       90/7
BREAKEVAL U;                                          PK:BREAK       62/2
BREAKQUIT();                                          PK:BREAK       69/3
BREAKRETRY();                                         PK:BREAK       77/5
BSTACKOVERFLOW();                                     PK:BINDING     33/1
BSTACKUNDERFLOW();                                    PK:BINDING     40/2
BUILDRELOCATIONFIELDS();                              PK:COMPACTING- 278/11
CAAAAR U;  %.                                         PK:CARCDR      34/1
CAAADR U;  %.                                         PK:CARCDR      38/2
CAAAR U;   %.                                         PK:CARCDR      99/17
CAADAR U;  %.                                         PK:CARCDR      42/3
CAADDR U;  %.                                         PK:CARCDR      46/4
CAADR U;   %.                                         PK:CARCDR      103/18
CAAR U;   %.                                          PK:CARCDR      141/27
CADAAR U;  %.                                         PK:CARCDR      50/5
CADADR U;  %.                                         PK:CARCDR      54/6
CADAR U;   %.                                         PK:CARCDR      107/19
CADDAR U;  %.                                         PK:CARCDR      58/7
CADDDR U;  %.                                         PK:CARCDR      62/8
CADDR U;   %.                                         PK:CARCDR      111/20
CADR U;   %.                                          PK:CARCDR      145/28
CAPTUREENVIRONMENT();  %. SAVE BINDINGS TO BE RESTORE PK:BINDING     47/3
CAR U;   %. LEFT SUBTREE OF PAIR                      PK:KNOWN-TO-CO 49/9
CATCH U;                                              PK:CATCH-THROW 64/4
CATCH!-ALL U;                                         PK:CATCH-THROW 30/1
CATCHPOP();                                           PK:CATCH-THROW 89/7
CATCHPUSH(TAG, PC, SP, ENV);                          PK:CATCH-THROW 98/9
CATCHSETUP EXPR 1) %. CATCHSETUP(TAG)                 PK:CATCH-THROW 133/15
CATCHSETUPAUX(TAG, PC, SP);                           PK:CATCH-THROW 139/16
CATCHSTACKDECREMENT X;                                PK:CATCH-THROW 92/8
CATCHTAGAT X;                                         PK:CATCH-THROW 114/11
CATCHTOPENV();                                        PK:CATCH-THROW 123/14
CATCHTOPPC();                                         PK:CATCH-THROW 117/12
CATCHTOPSP();                                         PK:CATCH-THROW 120/13
CATCHTOPTAG();                                        PK:CATCH-THROW 111/10
CDAAAR U;  %.                                         PK:CARCDR      66/9
CDAADR U;  %.                                         PK:CARCDR      70/10
CDAAR U;   %.                                         PK:CARCDR      115/21
CDADAR U;  %.                                         PK:CARCDR      74/11
CDADDR U;  %.                                         PK:CARCDR      78/12
CDADR U;   %.                                         PK:CARCDR      119/22
CDAR U;   %.                                          PK:CARCDR      149/29
CDDAAR U;  %.                                         PK:CARCDR      82/13
CDDADR U;  %.                                         PK:CARCDR      86/14
CDDAR U;   %.                                         PK:CARCDR      123/23
CDDDAR U;  %.                                         PK:CARCDR      90/15
CDDDDR U;  %.                                         PK:CARCDR      94/16
CDDDR U;   %.                                         PK:CARCDR      127/24
CDDR U;   %.                                          PK:CARCDR      153/30
CDR U;   %. RIGHT SUBTREE OF PAIR                     PK:KNOWN-TO-CO 53/10
CHANNELEJECT C; %. SKIP TO TOP OF NEXT OUTPUT PAGE    PK:OTHER-IO    34/1
CHANNELERROR(CHANNEL, MESSAGE);                       PK:IO-ERRORS   29/6
CHANNELLINELENGTH(CHN, LEN); %. SET MAXIMUM LINE LENG PK:OTHER-IO    41/3
CHANNELLPOSN CHN; %. NUMBER OF EOLS SINCE LAST FF     PK:OTHER-IO    61/7
CHANNELNOTOPEN(CHN, CH);                              PK:IO-ERRORS   14/1
CHANNELPOSN CHN; %. NUMBER OF CHARACTERS SINCE LAST E PK:OTHER-IO    55/5
CHANNELPRIN1(CHANNEL, ITM); %. DISPLAY ITM IN READABL PK:PRINTERS    477/33
CHANNELPRIN2(CHANNEL, ITM); %. DISPLAY ITM ON CHANNEL PK:PRINTERS    435/30
CHANNELPRIN2T(C, U);  %. PRIN2 AND TERPRI             PK:EASY-NON-SL 333/50
CHANNELPRINT(C, U); %. DISPLAY U AND TERMINATE LINE   PK:EASY-SL     345/54
CHANNELPRINTEVECTOR(CHANNEL, EVEC, LEVEL);            PK:PRINTERS    363/26
CHANNELPRINTF(OUT!*, FORMAT, A1, A2, A3, A4, A5, A6,  PK:PRINTF      205/9
CHANNELPRINTID(CHANNEL, ITM);                         PK:PRINTERS    187/16
CHANNELPRINTPAIR(CHANNEL, ITM, LEVEL);                PK:PRINTERS    274/22
CHANNELPRINTSTRING(CHANNEL, STRNG);                   PK:PRINTERS    159/13
CHANNELPRINTUNBOUND(CHANNEL, ITM);                    PK:PRINTERS    218/17
CHANNELPRINTVECTOR(CHANNEL, VEC, LEVEL);              PK:PRINTERS    324/24
CHANNELREAD CHANNEL; %. PARSE S-EXPRESSION FROM CHANN PK:READ        45/2
CHANNELREADCH CHN; %. READ A SINGLE CHARACTER ID      PK:OTHER-IO    67/9
CHANNELREADCHAR FILEDES; %. READ ONE CHAR FROM CHANNE PK:CHAR-IO     28/1
CHANNELREADEOF(CHANNEL, EF); % HANDLE END-OF-FILE IN  PK:READ        56/4
CHANNELREADLINE CHN;                                  PK:TOKEN-SCANN 529/17
CHANNELREADLISTORDOTTEDPAIR(CHANNEL, PA); % READ MACR PK:READ        67/6
CHANNELREADQUOTEDEXPRESSION(CHANNEL, QT); % READ MACR PK:READ        64/5
CHANNELREADRIGHTPAREN(CHANNEL, TOK);                  PK:READ        98/7
CHANNELREADTOKEN CHANNEL; %. TOKEN SCANNER            PK:TOKEN-SCANN 162/7
CHANNELREADTOKENWITHHOOKS CHANNEL;  % SCAN TOKEN W/RE PK:READ        34/1
CHANNELREADVECTOR CHANNEL; % READ MACRO [             PK:READ        111/9
CHANNELSPACES(C, N);  %. PRIN2 N SPACES               PK:EASY-NON-SL 341/52
CHANNELTAB(CHN, N); %. SPACES TO COLUMN N             PK:EASY-NON-SL 347/54
CHANNELTERPRI CHN; %. TERMINATE CURRENT OUTPUT LINE   PK:OTHER-IO    78/11
CHANNELTYI CHN; %. READ ONE CHAR ASCII VALUE          PK:IO-EXTENSIO 14/1
CHANNELTYO(CHN, CH); %. WRITE ONE CHAR ASCII VALUE    PK:IO-EXTENSIO 17/2
CHANNELUNREADCHAR(CHANNEL, CH);    %. INPUT BACKUP FU PK:CHAR-IO     72/5
CHANNELWRITEBITSTRAUX(CHANNEL, NUMBER, DIGITMASK, EXP PK:PRINTERS    123/7
CHANNELWRITEBITSTRING(CHANNEL, NUMBER, DIGITMASK, EXP PK:PRINTERS    119/6
CHANNELWRITEBLANKOREOL CHANNEL;                       PK:PRINTERS    240/20
CHANNELWRITEBYTES(CHANNEL, ITM);                      PK:PRINTERS    417/29
CHANNELWRITECHAR(FILEDES, CH); %. WRITE ONE CHAR TO C PK:CHAR-IO     47/3
CHANNELWRITECODEPOINTER(CHANNEL, CP);                 PK:PRINTERS    223/18
CHANNELWRITEEVECTOR(CHANNEL, EVEC, LEVEL);            PK:PRINTERS    346/25
CHANNELWRITEFIXNUM(CHANNEL, NUM);                     PK:PRINTERS    137/9
CHANNELWRITEFLOAT(CHANNEL, LISPFLOATPTR);             PK:PRINTERS    156/12
CHANNELWRITEHALFWORDS(CHANNEL, ITM);                  PK:PRINTERS    398/28
CHANNELWRITEID(CHANNEL, ITM);                         PK:PRINTERS    170/14
CHANNELWRITEINTEGER(CHANNEL, NUM);                    PK:PRINTERS    140/10
CHANNELWRITEPAIR(CHANNEL, ITM, LEVEL);                PK:PRINTERS    246/21
CHANNELWRITESTRING(CHANNEL, STRNG);                   PK:PRINTERS    82/2
CHANNELWRITESYSFLOAT(CHANNEL, FLOATPTR);              PK:PRINTERS    150/11
CHANNELWRITESYSINTEGER(CHANNEL, NUMBER, RADIX);       PK:PRINTERS    99/4
CHANNELWRITEUNBOUND(CHANNEL, ITM);                    PK:PRINTERS    182/15
CHANNELWRITEUNKNOWNITEM(CHANNEL, ITM);                PK:PRINTERS    235/19
CHANNELWRITEVECTOR(CHANNEL, VEC, LEVEL);              PK:PRINTERS    302/23
CHANNELWRITEWORDS(CHANNEL, ITM);                      PK:PRINTERS    380/27
CHECKANDSETMARK P;                                    PK:COMPACTING- 232/8
CHECKLINEFIT(LEN, CHN, FN, ITM);                      PK:PRINTERS    77/1
CLEARBINDINGS();  %. RESTORE BINDINGS TO TOP LEVEL    PK:BINDING     56/5
CLEARCOMPRESSCHANNEL();                               PK:EXPLODE-COM 74/8
CLOSE FILEDES;  %. END ACCESS TO FILE                 PK:OPEN-CLOSE  55/2
CODE!-NUMBER!-OF!-ARGUMENTS CP;                       PK:PUTD-GETD   115/4
CODEP U;   %. IS U A CODE POINTER?                    PK:KNOWN-TO-CO 20/1
COMMENTOUTCODE U; %. COMMENT OUT A SINGLE EXPRESSION  PK:EVAL-WHEN   17/1
COMPACTHEAP();                                        PK:COMPACTING- 409/17
COMPILETIME U;  %. EVALUATE AT COMPILE TIME ONLY      PK:EVAL-WHEN   20/2
COMPRESS COMPRESSLIST!*; %. CHAR-LIST --> S-EXPR      PK:EXPLODE-COM 83/10
COMPRESSERROR();                                      PK:EXPLODE-COM 80/9
COMPRESSREADCHAR CHANNEL;                             PK:EXPLODE-COM 63/7
CONCAT(R1, R2); %. CONCATENATE 2 SEQUENCES            PK:SEQUENCE    251/7
COND U;   %. CONDITIONAL EVALUATION CONSTRUCT         PK:EASY-SL     145/20
CONS(U, V);  %. CONSTRUCT PAIR WITH CAR U AND CDR V   PK:CONS-MKVECT 33/2
CONST FORM;                                           PK:DEFCONST    30/3
CONSTANTP U;  %. IS EVAL U EQ U BY DEFINITION?        PK:EASY-SL     38/2
CONTERROR U;  %. SET UP FOR CONTINUABLEERROR          PK:CONT-ERROR  23/1
CONTINUABLEERROR(ERRNUM, MESSAGE, ERRORFORM!*); %. MA PK:ERROR-HANDL 69/5
COPY U;   %. COPY ALL PAIRS IN S-EXPR                 PK:EASY-NON-SL 254/41
COPYD(NEW, OLD);  %. FUNDEF NEW := FUNDEF OLD;        PK:EASY-NON-SL 61/10
COPYFROMALLBASES();                                   PK:COPYING-GC  93/4
COPYFROMBASE P;                                       PK:COPYING-GC  120/6
COPYFROMRANGE(LO, HI);                                PK:COPYING-GC  110/5
COPYITEM X;                                           PK:COPYING-GC  123/7
COPYITEM1 S;  % COPIER FOR GC                         PK:COPYING-GC  138/8
COPYSTRING S;  %. COPY TO NEW HEAP STRING             PK:COPIERS     28/2
COPYSTRINGTOFROM(NEW, OLD);  %. COPY ALL CHARS IN OLD PK:COPIERS     17/1
COPYVECTOR S;  %. COPY TO NEW VECTOR IN HEAP          PK:COPIERS     50/5
COPYVECTORTOFROM(NEW, OLD); %. MOVE ELEMENTS, DON'T R PK:COPIERS     40/4
COPYWARRAY(NEW, OLD, UPLIM); %. COPY UPLIM + 1 WORDS  PK:COPIERS     35/3
COPYWRDS S;  %. ALLOCATE NEW WRDS ARRAY IN HEAP       PK:COPIERS     67/7
COPYWRDSTOFROM(NEW, OLD); %. LIKE COPYWARRAY IN HEAP  PK:COPIERS     57/6
DE U;   %. TERSE SYNTAX FOR PUTD CALL FOR EXPR        PK:EASY-SL     72/7
DECLAREFLUIDORGLOBAL(IDLIST, FG);                     PK:FLUID-GLOBA 28/1
DECLAREFLUIDORGLOBAL1(U, FG);                         PK:FLUID-GLOBA 31/2
DEFARITH1ENTRY U;                                     PK:ARITHMETIC  243/17
DEFARITH1PREDICATEENTRY U;                            PK:ARITHMETIC  246/18
DEFARITH2ENTRY U;                                     PK:ARITHMETIC  240/16
DEFARITHENTRY L;                                      PK:ARITHMETIC  258/21
DEFAUTOLOAD U;                                        PK:AUTOLOAD    17/1
DEFCONST FORM;  %. DEFCONST(NAME, VALUE, ...);        PK:DEFCONST    14/1
DEFLIST(DLIST, INDICATOR); %. PUT MANY IDS, SAME INDI PK:EASY-SL     277/42
DEFNPRINT U; % HANDLE CASE OF !*DEFN:=T               PK:TOP-LOOP    119/2
DEFNPRINT1 U;                                         PK:TOP-LOOP    130/3
DEL(F, U, V); %. GENERALIZED DELETE, F IS COMPARISON  PK:EASY-NON-SL 152/24
DELASC(U, V);  %. REMOVE FIRST (U . XXX) FROM V       PK:EASY-NON-SL 192/31
DELASCIP(U, V);  %. DESTRUCTIVE DELASC                PK:EASY-NON-SL 203/33
DELASCIP1(U, V);  % AUXILIARY FUNCTION FOR DELASCIP   PK:EASY-NON-SL 197/32
DELATQ(U, V);  %. EQ VERSION OF DELASC                PK:EASY-NON-SL 210/34
DELATQIP(U, V);  %. DESTRUCTIVE DELATQ                PK:EASY-NON-SL 221/36
DELATQIP1(U, V);  % AUXILIARY FUNCTION FOR DELATQIP   PK:EASY-NON-SL 215/35
DELBPS(BOTTOM, TOP); %. RETURN SPACE TO BPS           PK:ALLOCATORS  133/12
DELETE(U, V);  %. REMOVE FIRST TOP-LEVEL U IN V       PK:EASY-SL     282/43
DELETIP(U, V);  %. DESTRUCTIVE DELETE                 PK:EASY-NON-SL 140/22
DELETIP1(U, V);  % AUXILIARY FUNCTION FOR DELETIP     PK:EASY-NON-SL 135/21
DELHEAP(LOWPOINTER, HIGHPOINTER);                     PK:ALLOCATORS  45/2
DELQ(U, V);  %. EQ VERSION OF DELETE                  PK:EASY-NON-SL 147/23
DELQIP(U, V);  %. DESTRUCTIVE DELQ                    PK:EASY-NON-SL 162/26
DELQIP1(U, V);  % AUXILIARY FUNCTION FOR DELQIP       PK:EASY-NON-SL 157/25
DELWARRAY(BOTTOM, TOP); %. RETURN SPACE FOR WARRAY    PK:ALLOCATORS  147/14
DF U;   %. TERSE SYNTAX FOR PUTD CALL FOR FEXPR       PK:EASY-SL     77/8
DIGIT U; %. IS U AN ID WHOSE PRINT NAME IS A DIGIT?   PK:OTHERS-SL   24/2
DIGITTONUMBER D;                                      PK:TOKEN-SCANN 462/9
DIVIDE(U, V);  %. DOTTED PAIR REMAINDER AND QUOTIENT  PK:EASY-SL     176/24
DM U;   %. TERSE SYNTAX FOR PUTD CALL FOR MACRO       PK:EASY-SL     82/9
DN U;   %. TERSE SYNTAX FOR PUTD CALL FOR NEXPR       PK:EASY-SL     87/10
DOPNTH(U, N);                                         PK:EASY-NON-SL 265/43
DOTCONTEXTERROR(); % PARSING ERROR                    PK:READ        106/8
DS FORM;  %. DEFINE SMACRO                            PK:DEFINE-SMAC 29/3
DSKIN F;  %. READ A FILE (DSKIN "FILE")               PK:DSKIN       27/1
DSKINDEFNPRINT U; % HANDLE CASE OF !*DEFN:=T          PK:DSKIN       52/3
DSKINEVAL U;                                          PK:DSKIN       49/2
EDCOPY(L,N);                                          PK:MINI-EDITOR 111/5
EDIT S;              %. EDIT A STRUCTURE, S           PK:MINI-EDITOR 44/2
EDIT0(S,READER,PRINTER);                              PK:MINI-EDITOR 54/3
EDITF(FN);           %. EDIT A COPY OF FUNCTION BODY  PK:MINI-EDITOR 28/1
EGETV(VEC, I);         %. RETRIEVE THE I'TH ENTRY OF  PK:VECTORS     63/5
EHELP;                                                PK:MINI-EDITOR 140/10
EJECT();  %. SKIP TO TOP OF NEXT OUTPUT PAGE          PK:OTHER-IO    38/2
EPUTV(VEC, I, VAL);    %. STORE VAL AT I'TH POSITION  PK:VECTORS     80/6
EQ(U, V);  %. ARE U AND V IDENTICAL?                  PK:KNOWN-TO-CO 23/2
EQCAR(U, V);  %. CAR U EQ V                           PK:EASY-NON-SL 44/5
EQN(U, V);  %. EQ OR NUMERIC EQUALITY                 PK:EQUAL       21/1
EQSTR(U, V);  %. EQ OR STRING EQUALITY                PK:EQUAL       62/3
ERROR(NUMBER, MESSAGE); %. THROW TO ERRORSET          PK:ERROR-ERROR 39/1
ERRORPRINTF(FORMAT, A1, A2, A3, A4); % ALSO A5..A14   PK:PRINTF      153/4
ERRORSET(FORM, !*EMSGP, !*INNER!*BACKTRACE); %. PROTE PK:ERROR-ERROR 58/3
ERRPRIN U;  %. `PRIN1 WITH QUOTES'                    PK:PRINTF      186/7
ERRSET U;                                             PK:ERROR-ERROR 52/2
EUPBV V;               %. UPPER LIMIT OF VECTOR V     PK:VECTORS     97/7
EVAL U;   %. INTERPRET S-EXPRESSION AS PROGRAM        PK:EVAL-APPLY  108/4
EVALINITFORMS();  %. EVALUATE AND CLEAR INITFORMS!*   PK:TOP-LOOP    209/14
EVAND U;   %. EXPR SUPPORT FOR AND                    PK:EASY-SL     131/16
EVAND1 U;  % AUXILIARY FUNCTION FOR EVAND             PK:EASY-SL     134/17
EVBR L;                                               PK:MINI-TRACE  200/14
EVCOND U;  %. EXPR SUPPORT FOR COND                   PK:EASY-SL     148/21
EVDEFCONST(CONSTNAME, CONSTVALUE);                    PK:DEFCONST    27/2
EVECTORP V;                                           PK:VECTORS     60/4
EVLIS U;   %. FOR EACH X IN U COLLECT EVAL X          PK:EASY-SL     322/49
EVLOAD U;                                             PK:LOAD        60/2
EVOR U;   %. EXPR SUPPORT FOR OR                      PK:EASY-SL     142/19
EVPROGN U;  %. EXPR SUPPORT FOR PROGN, EVAL, COND     PK:EASY-SL     118/14
EVRELOAD U;                                           PK:LOAD        66/4
EVTR L;                                               PK:MINI-TRACE  90/5
EVUNBR L;                                             PK:MINI-TRACE  206/16
EVUNTR L;                                             PK:MINI-TRACE  96/7
EXIT U;                 %. TO LEAVE CURRENT ITERATION PK:LOOP-MACROS 49/2
EXPAND(L, FN);  %. L = (A B C) --> (FN A (FN B C))    PK:EASY-SL     329/51
EXPANDSETF(LHS, RHS);                                 PK:LISP-MACROS 48/3
EXPLODE U;  %. S-EXPR --> CHAR-LIST                   PK:EXPLODE-COM 28/2
EXPLODE2 U;  %. PRIN2 VERSION OF EXPLODE              PK:EXPLODE-COM 36/3
EXPLODEWRITECHAR(CHANNEL, CH);                        PK:EXPLODE-COM 24/1
EXPRP U;   %. IS U AN EXPR?                           PK:EASY-NON-SL 47/6
EXPT(X, N);                                           PK:EASY-SL     47/5
EXTRAARGUMENTP U;                                     PK:FASLIN      25/3
FASLIN FILE;                                          PK:FASLIN      34/5
FATALERROR S;                                         PK:ERROR-HANDL 31/1
FEXPRP U;  %. IS U AN FEXPR?                          PK:EASY-NON-SL 53/8
FILEP EXPR 1)                                         PK:EASY-NON-SL 360/56
FILEP F;   %. IS F AN EXISTING FILE?                  PK:EASY-NON-SL 374/57
FINDCATCHMARKANDTHROW(TAG, VALUE, P);                 PK:CATCH-THROW 185/22
FINDFIRST(A,S,TRC);      %. FIND OCCURANCE OF A IN S  PK:MINI-EDITOR 120/7
FIRST U;  %. FIRST ELEMENT OF A LIST                  PK:EASY-NON-SL 95/13
FIXP U;  %. IS U AN INTEGER?                          PK:OTHERS-SL   19/1
FLAG(IDLIST, INDICATOR); %. MARK ALL IN IDLIST WITH I PK:PROPERTY-LI 92/6
FLAG1(U, INDICATOR);                                  PK:PROPERTY-LI 98/7
FLAGP(U, INDICATOR);  %. IS U MARKED WITH INDICATOR?  PK:PROPERTY-LI 43/3
FLATSIZE U;  %. CHARACTER LENGTH OF S-EXPRESSION      PK:EXPLODE-COM 49/5
FLATSIZE2 U;  %. PRIN2 VERSION OF FLATSIZE            PK:EXPLODE-COM 55/6
FLATSIZEWRITECHAR(CHANNEL, CH);                       PK:EXPLODE-COM 46/4
FLOATADD1 FIRSTARG;                                   PK:ARITHMETIC  432/41
FLOATDIFFERENCE(FIRSTARG, SECONDARG);                 PK:ARITHMETIC  300/25
FLOATFIX ARG;                                         PK:ARITHMETIC  464/47
FLOATGREATERP(FIRSTARG, SECONDARG);                   PK:ARITHMETIC  411/37
FLOATINTARG ARG;                                      PK:ARITHMETIC  472/48
FLOATLESSP(FIRSTARG, SECONDARG);                      PK:ARITHMETIC  420/39
FLOATMINUS FIRSTARG;                                  PK:ARITHMETIC  459/46
FLOATMINUSP FIRSTARG;                                 PK:ARITHMETIC  485/50
FLOATONEP FIRSTARG;                                   PK:ARITHMETIC  501/54
FLOATP U;  %. IS U A FLOATING POINT NUMBER?           PK:KNOWN-TO-CO 26/3
FLOATPLUS2(FIRSTARG, SECONDARG);                      PK:ARITHMETIC  283/23
FLOATQUOTIENT(FIRSTARG, SECONDARG);                   PK:ARITHMETIC  340/29
FLOATREMAINDER(FIRSTARG, SECONDARG);                  PK:ARITHMETIC  365/31
FLOATSUB1 FIRSTARG;                                   PK:ARITHMETIC  443/43
FLOATTIMES2(FIRSTARG, SECONDARG);                     PK:ARITHMETIC  319/27
FLOATZEROP FIRSTARG;                                  PK:ARITHMETIC  493/52
FLUID IDLIST;  %. DECLARE ALL IN IDLIST AS FLUID VARS PK:FLUID-GLOBA 43/3
FLUID1 U;  %. DECLARE U FLUID                         PK:FLUID-GLOBA 46/4
FLUIDP U;  %. IS U A FLUID VARIABLE?                  PK:FLUID-GLOBA 49/5
FOR U;                                                PK:LOOP-MACROS 85/6
FOREACH U;  %. MACRO FOR MAP FUNCTIONS                PK:LOOP-MACROS 15/1
FOURTH U;  %. FOURTH ELEMENT OF A LIST                PK:EASY-NON-SL 104/16
FUNCTION U;  %. SAME AS QUOTE IN THIS VERSION         PK:EASY-SL     339/53
GCERROR(MESSAGE, P);                                  PK:COMPACTING- 442/18
GCMESSAGE();                                          PK:COMPACTING- 447/19
GCSTATS();                                            PK:COPYING-GC  193/10
GENSYM();  %. GENERATE UNIQUE, UNINTERNED SYMBOL      PK:OBLIST      160/10
GENSYM1 N;  % AUXILIARY FUNCTION FOR GENSYM           PK:OBLIST      164/11
GEQ(U, V);  %. GREATER THAN OR EQUAL TO               PK:EASY-NON-SL 38/3
GET(U, INDICATOR); %. RETRIEVE VALUE STORED FOR U WIT PK:PROPERTY-LI 69/5
GETD U;   %. LOOKUP FUNCTION DEFINITION OF U          PK:PUTD-GETD   42/1
GETFNTYPE U;                                          PK:PROPERTY-LI 64/4
GETV(VEC, I);  %. RETRIEVE THE I'TH ENTRY OF VEC      PK:VECTORS     19/1
GLOBAL IDLIST;  %. DECLARE ALL IN IDLIST AS GLOBAL VA PK:FLUID-GLOBA 52/6
GLOBAL1 U;  %. DECLARE U GLOBAL                       PK:FLUID-GLOBA 55/7
GLOBALINSTALL S; % ADD NEW ID WITH PNAME S TO OBLIST  PK:OBLIST      197/15
GLOBALLOOKUP S; % LOOKUP STRING S IN GLOBAL OBLIST    PK:OBLIST      191/14
GLOBALP U;  %. IS U A GLOBAL VARIABLE                 PK:FLUID-GLOBA 58/8
GLOBALREMOVE S; % REMOVE ID WITH PNAME S FROM OBLIST  PK:OBLIST      209/16
GO U;  %. GOTO LABEL WITHIN PROG                      PK:PROG-AND-FR 46/2
GTBPS N;  %. ALLOCATE N WORDS FOR BINARY CODE         PK:ALLOCATORS  122/11
GTCONSTSTR N;  %. ALLOCATE UN-COLLECTED STRING FOR PR PK:ALLOCATORS  56/4
GTFIXN();  %. ALLOCATE SPACE FOR A FIXNUM             PK:ALLOCATORS  88/8
GTFLTN();  %. ALLOCATE SPACE FOR A FLOAT              PK:ALLOCATORS  95/9
GTHALFWORDS N;  %. ALLOCATE SPACE FOR N HALFWORDS     PK:ALLOCATORS  64/5
GTHEAP N;  %. GET HEAP BLOCK OF N WORDS               PK:ALLOCATORS  33/1
GTID();  %. ALLOCATE A NEW ID                         PK:ALLOCATORS  104/10
GTSTR N;  %. ALLOCATE SPACE FOR A STRING N CHARS      PK:ALLOCATORS  48/3
GTVECT N;  %. ALLOCATE SPACE FOR A VECTOR N ITEMS     PK:ALLOCATORS  71/6
GTWARRAY N; %. ALLOCATE N WORDS FOR WVAR/WARRAY/WSTRI PK:ALLOCATORS  136/13
GTWRDS N;  %. ALLOCATE SPACE FOR N UNTRACED WORDS     PK:ALLOCATORS  80/7
HALFWORDSEQUAL(U, V);                                 PK:EQUAL       92/6
HARDCONS(U, V); % BASIC CONS WITH CAR U AND CDR V     PK:CONS-MKVECT 24/1
HASHFUNCTION S; % COMPUTE HASH FUNCTION OF STRING     PK:OBLIST      93/5
HELPBREAK();                                          PK:BREAK       86/6
HIST AL;  %. PRINT HISTORY ENTRIES                    PK:TOP-LOOP    154/8
HISTPRINT(L, N, M);                                   PK:TOP-LOOP    177/9
ID2INT U;  %. RETURN ID INDEX AS LISP NUMBER          PK:TYPE-CONVER 25/1
ID2STRING U;  %. RETURN PRINT NAME OF U (NOT COPY)    PK:TYPE-CONVER 67/8
IDP U;   %. IS U AN ID?                               PK:KNOWN-TO-CO 32/5
ILLEGALSTANDARDCHANNELCLOSE CHN;                      PK:IO-ERRORS   23/4
IMPLODE COMPRESSLIST!*; %. COMPRESS WITH IDS INTERNED PK:EXPLODE-COM 90/11
IMPORTS L;                                            PK:LOAD        101/6
INDEXERROR(OFFENDER, FN);                             PK:TYPE-ERRORS 26/3
INDX(R1, R2);  %. ELEMENT OF SEQUENCE                 PK:SEQUENCE    24/1
INITNEWID(U, V); % INITIALIZE CELLS OF AN ID TO DEFAU PK:OBLIST      85/4
INITOBLIST();                                         PK:OBLIST      219/17
INOBLIST U; % U IS A STRING.  RETURNS AN OBARRAY POIN PK:OBLIST      104/6
INP N;   %. RETURN NTH INPUT                          PK:TOP-LOOP    145/5
INSTANTIATEINFORM(FORMALS, FORM);                     PK:DEFINE-SMAC 21/1
INT2CODE N;  %. CONVERT LISP INTEGER TO CODE POINTER  PK:TYPE-CONVER 53/5
INT2ID U;  %. RETURN ID CORRESPONDING TO INDEX        PK:TYPE-CONVER 29/2
INT2SYS N;  %. CONVERT LISP INTEGER TO UNTAGGED       PK:TYPE-CONVER 38/3
INTADD1 FIRSTARG;                                     PK:ARITHMETIC  426/40
INTDIFFERENCE(FIRSTARG, SECONDARG);                   PK:ARITHMETIC  294/24
INTERN U;  %. ADD U TO OBLIST                         PK:OBLIST      124/7
INTERNGENSYM(); %. GENERATE UNIQUE, INTERNED SYMBOL   PK:OBLIST      177/12
INTERNP U;  %. IS U AN INTERNED ID?                   PK:OBLIST      150/9
INTERPBACKTRACE();                                    PK:BACKTRACE   19/1
INTGREATERP(FIRSTARG, SECONDARG);                     PK:ARITHMETIC  408/36
INTHISCASE(CASEEXPR,CASES);                           PK:LISP-MACROS 37/1
INTLAND(FIRSTARG, SECONDARG);                         PK:ARITHMETIC  377/32
INTLESSP(FIRSTARG, SECONDARG);                        PK:ARITHMETIC  417/38
INTLNOT X;                                            PK:ARITHMETIC  448/44
INTLOR(FIRSTARG, SECONDARG);                          PK:ARITHMETIC  384/33
INTLSHIFT(FIRSTARG, SECONDARG);                       PK:ARITHMETIC  400/35
INTLXOR(FIRSTARG, SECONDARG);                         PK:ARITHMETIC  391/34
INTMINUS FIRSTARG;                                    PK:ARITHMETIC  453/45
INTMINUSP FIRSTARG;                                   PK:ARITHMETIC  482/49
INTONEP FIRSTARG;                                     PK:ARITHMETIC  498/53
INTPLUS2(FIRSTARG, SECONDARG);                        PK:ARITHMETIC  277/22
INTQUOTIENT(FIRSTARG, SECONDARG);                     PK:ARITHMETIC  330/28
INTREMAINDER(FIRSTARG, SECONDARG);                    PK:ARITHMETIC  355/30
INTSUB1 FIRSTARG;                                     PK:ARITHMETIC  437/42
INTTIMES2(FIRSTARG, SECONDARG);                       PK:ARITHMETIC  313/26
INTZEROP FIRSTARG;                                    PK:ARITHMETIC  490/51
IOERROR(MESSAGE);                                     PK:IO-ERRORS   26/5
LAMBDAAPPLY(FN, ARGS); %. FN IS LAMBDA, UNEVALED ARGS PK:EVAL-APPLY  61/2
LAMBDAEVALAPPLY(FN, ARGS); %. FN IS LAMBDA, ARGS TO B PK:EVAL-APPLY  45/1
LAMBIND V;  % V IS VECTOR OF IDS                      PK:FAST-BINDER 22/1
LAPIN FIL;                                            PK:DSKIN       67/4
LASTCAR X;  %. LAST ELEMENT OF LIST                   PK:EASY-NON-SL 248/39
LASTPAIR X;  %. LAST PAIR OF LIST                     PK:EASY-NON-SL 251/40
LBIND1(IDNAME, VALUETOBIND); %. SUPPORT FOR LAMBDA    PK:BINDING     63/7
LCONC(PTR, LST);  %. NCONC MAINTAINING POINTER TO END PK:EASY-NON-SL 294/47
LENGTH U;  %. LENGTH OF LIST U                        PK:OTHERS-SL   35/4
LENGTH1(U, N);                                        PK:OTHERS-SL   38/5
LEQ(U, V);  %. LESS THAN OR EQUAL TO                  PK:EASY-NON-SL 41/4
LINELENGTH LEN; %. SET MAXIMUM LINE LENGTH            PK:OTHER-IO    52/4
LISP2CHAR U;  %. CONVERT LISP ITEM TO SYSLSP CHAR     PK:TYPE-CONVER 43/4
LISPEQUAL(U, V); %. STRUCTURAL EQUALITY               PK:EQUAL       37/2
LIST U;   %. CONSTRUCT LIST OF ARGUMENTS              PK:EASY-SL     66/6
LIST2(U, V);  %. 2-ARGUMENT EXPR FOR LIST             PK:COMP-SUPPOR 33/6
LIST2SET L;  %. REMOVE REDUNDANT ELEMENTS FROM L      PK:SETS        12/1
LIST2SETQ L;  %. EQ VERSION OF LIST2SET               PK:SETS        17/2
LIST2STRING P;  %. MAKE STRING WITH ASCII VALUES IN P PK:TYPE-CONVER 95/11
LIST2VECTOR L;   %. CONVERT LIST TO VECTOR            PK:TYPE-CONVER 115/13
LIST3(U, V, W);  %. 3-ARGUMENT EXPR FOR LIST          PK:COMP-SUPPOR 30/5
LIST4(U, V, W, X); %. 4-ARGUMENT EXPR FOR LIST        PK:COMP-SUPPOR 27/4
LIST5(U, V, W, X, Y); %. 5-ARGUMENT EXPR FOR LIST     PK:COMP-SUPPOR 24/3
LITER U; %. IS U A SINGLE CHARACTER ALPHABETIC ID?    PK:OTHERS-SL   27/3
LOAD U;                                               PK:LOAD        57/1
LOAD1 U;                                              PK:LOAD        70/5
LOADTIME U;  %. EVALUATE AT LOAD TIME ONLY            PK:EVAL-WHEN   33/4
LOCALIDNUMBERP U;                                     PK:FASLIN      19/1
LOCALTOGLOBALID U;                                    PK:FASLIN      22/2
LOOKUPORADDTOOBLIST U;                                PK:OBLIST      63/2
LPOSN();  %. NUMBER OF EOLS SINCE LAST FF             PK:OTHER-IO    64/8
MACROP U;  %. IS U A MACRO?                           PK:EASY-NON-SL 50/7
MAKE!-BYTES(L, C); %. MAKE BYTE VECTOR WITH UPB L, AL PK:SEQUENCE    349/10
MAKE!-HALFWORDS(L, C); %. MAKE H VECT WITH UPB L, ALL PK:SEQUENCE    359/11
MAKE!-VECTOR(L, C); %. MAKE VECT WITH UPB L, ALL ITEM PK:SEQUENCE    380/13
MAKE!-WORDS(L, C); %. MAKE W VECT WITH UPB L, ALL ITE PK:SEQUENCE    370/12
MAKEARGLIST N;                                        PK:AUTOLOAD    51/2
MAKEBUFINTOFLOAT EXPONENT;                            PK:TOKEN-SCANN 139/6
MAKEBUFINTOID();                                      PK:TOKEN-SCANN 106/2
MAKEBUFINTOLISPINTEGER(RADIX, SIGN);                  PK:TOKEN-SCANN 126/5
MAKEBUFINTOSTRING();                                  PK:TOKEN-SCANN 115/3
MAKEBUFINTOSYSNUMBER(RADIX, SIGN);                    PK:TOKEN-SCANN 121/4
MAKEDS(MACRONAME, FORMALS, FORM);                     PK:DEFINE-SMAC 47/4
MAKEEXTRAARGUMENT U;                                  PK:FASLIN      28/4
MAKEFIXNUM N;                                         PK:ARITHMETIC  213/11
MAKEIDFREELIST();                                     PK:COMPACTING- 258/10
MAKEIDFREELIST();                                     PK:COPYING-GC  173/9
MAKEINPUTAVAILABLE();                                 PK:TOKEN-SCANN 548/19
MAKESTRINGINTOBITSTRING(STRNG, RADIX, RADIXEXPONENT,  PK:TOKEN-SCANN 488/12
MAKESTRINGINTOLISPINTEGER(S, RADIX, SIGN);            PK:TOKEN-SCANN 468/10
MAKESTRINGINTOSYSINTEGER(STRNG, RADIX, SIGN);         PK:TOKEN-SCANN 471/11
MAKEUNBOUND U;  %. MAKE U AN UNBOUND ID               PK:SYMBOL-VALU 19/2
MAP(L, FN);  %. FOR EACH X ON L DO FN(X);             PK:EASY-SL     203/31
MAP2(L, M, FN);  %. FOR EACH X, Y ON L, M DO FN(X, Y) PK:EASY-NON-SL 313/48
MAPC(L, FN);  %. FOR EACH X IN L DO FN(X);            PK:EASY-SL     208/32
MAPC2(L, M, FN);  %. FOR EACH X, Y IN L, M DO FN(X, Y PK:EASY-NON-SL 322/49
MAPCAN(L, FN);  %. FOR EACH X IN L CONC FN(X);        PK:EASY-SL     213/33
MAPCAR(L, FN);  %. FOR EACH X IN L COLLECT FN(X);     PK:EASY-SL     221/35
MAPCON(L, FN);  %. FOR EACH X ON L CONC FN(X);        PK:EASY-SL     217/34
MAPLIST(L, FN);  %. FOR EACH X ON L COLLECT FN(X);    PK:EASY-SL     225/36
MAPOBL F;  %. APPLY F TO EVERY INTERNED ID            PK:OBLIST      181/13
MARKANDCOPYFROMID X;                                  PK:COPYING-GC  85/3
MARKFROMALLBASES();                                   PK:COMPACTING- 181/3
MARKFROMBASE BASE;                                    PK:COMPACTING- 212/7
MARKFROMONESYMBOL X;                                  PK:COMPACTING- 201/5
MARKFROMRANGE(LOW, HIGH);                             PK:COMPACTING- 209/6
MARKFROMSYMBOLS();                                    PK:COMPACTING- 191/4
MARKFROMVECTOR INFO;                                  PK:COMPACTING- 250/9
MAX U;   %. NUMERIC MAXIMUM OF SEVERAL ARGUMENTS      PK:EASY-SL     182/25
MAX2(U, V);  %. MAXIMUM OF 2 ARGUMENTS                PK:EASY-SL     185/26
MEM(F, U, V); %. GENERALIZED MEMBER, F IS COMPARISON  PK:EASY-NON-SL 182/29
MEMBER(U, V);  %. FIND U IN V                         PK:EASY-SL     289/44
MEMQ(U, V);  % EQ VERSION OF MEMBER                   PK:EASY-SL     294/45
MIN U;   %. NUMERIC MINIMUM OF SEVERAL ARGUMENTS      PK:EASY-SL     188/27
MIN2(U, V);  %. MINIMUM OF 2 ARGUMENTS                PK:EASY-SL     191/28
MKEVECTOR(N,ETAG);      %. ALLOCATE EVECT, INIT ALL T PK:CONS-MKVECT 85/6
MKFLAGVAR U;  % SHOULD BE REDEFINED IN PACKAGE.RED    PK:ONOFF       27/2
MKQUOTE U;  %. EVAL MKQUOTE U EQ U                    PK:EASY-NON-SL 89/12
MKSTRING(L, C); %. MAKE STR WITH UPB L, ALL CHARS C   PK:SEQUENCE    339/9
MKVECT N;  %. ALLOCATE VECTOR, INIT ALL TO NIL        PK:CONS-MKVECT 72/5
NCONC(U, V);  %. DESTRUCTIVE VERSION OF APPEND        PK:EASY-SL     299/46
NCONS U;   %. U . NIL, OR 1-ARGUMENT EXPR FOR LIST    PK:COMP-SUPPOR 15/1
NCONS U;  %. U . NIL                                  PK:CONS-MKVECT 59/4
NE(U, V);  %. NOT EQ                                  PK:EASY-NON-SL 35/2
NEQ(U, V); %. NOT EQUAL (SHOULD BE CHANGED TO NOT EQ) PK:EASY-NON-SL 32/1
NEWID S;  %. ALLOCATE UN-INTERNED ID WITH PRINT NAME  PK:OBLIST      82/3
NEXPRP U;  %. IS U AN NEXPR?                          PK:EASY-NON-SL 56/9
NEXT U;                 %. CONTINUE LOOP              PK:LOOP-MACROS 57/3
NONCHARACTERERROR(OFFENDER, FN);                      PK:TYPE-ERRORS 44/9
NONIDERROR(OFFENDER, FN);                             PK:TYPE-ERRORS 32/5
NONINTEGER1ERROR(ARG, DISPATCHTABLE);                 PK:ARITHMETIC  146/5
NONINTEGER2ERROR(FIRSTARG, SECONDARG, DISPATCHTABLE); PK:ARITHMETIC  139/4
NONINTEGERERROR(OFFENDER, FN);                        PK:TYPE-ERRORS 38/7
NONIOCHANNELERROR(OFFENDER, FN);                      PK:TYPE-ERRORS 59/14
NONNUMBERERROR(OFFENDER, FN);                         PK:TYPE-ERRORS 35/6
NONPAIRERROR(OFFENDER, FN);                           PK:TYPE-ERRORS 29/4
NONPOSITIVEINTEGERERROR(OFFENDER, FN);                PK:TYPE-ERRORS 41/8
NONSEQUENCEERROR(OFFENDER, FN);                       PK:TYPE-ERRORS 56/13
NONSTRINGERROR(OFFENDER, FN);                         PK:TYPE-ERRORS 47/10
NONVECTORERROR(OFFENDER, FN);                         PK:TYPE-ERRORS 50/11
NONWORDS(OFFENDER, FN);                               PK:TYPE-ERRORS 53/12
NOT U;   %. EQUIVALENT TO NULL                        PK:EASY-SL     167/22
NTH(U, N);  %. N-TH ELEMENT OF LIST                   PK:EASY-NON-SL 261/42
NTHENTRY N;                                           PK:TOP-LOOP    138/4
NULL U;   %. IS U EQ NIL?                             PK:EASY-SL     41/3
NUMBERP U;  %. IS U A NUMBER OF ANY KIND?             PK:EASY-SL     44/4
OFF U;                                                PK:ONOFF       33/4
ON U;                                                 PK:ONOFF       30/3
ONEARGDISPATCH FIRSTARG;                              PK:ARITHMETIC  152/6
ONEARGDISPATCH1 EXPR 2)                               PK:ARITHMETIC  155/7
ONEARGERROR(FIRSTARG, DUMMY, DISPATCHTABLE);          PK:ARITHMETIC  179/8
ONEARGPREDICATEDISPATCH FIRSTARG;                     PK:ARITHMETIC  185/9
ONEARGPREDICATEDISPATCH1 EXPR 2)                      PK:ARITHMETIC  188/10
ONOFF!*(IDLIST, U);                                   PK:ONOFF       15/1
OPEN(FILENAME, ACCESSTYPE); %. GET ACCESS TO FILE     PK:OPEN-CLOSE  28/1
OR U;   %. SEQUENTIALLY EVALUATE UNTIL NON-NIL        PK:EASY-SL     139/18
PACKAGE U;                                            PK:TOKEN-SCANN 543/18
PAIR(U, V);  %. FOR EACH X,Y IN U,V COLLECT (X . Y)   PK:EASY-SL     261/40
PAIRP U;   %. IS U A PAIR?                            PK:KNOWN-TO-CO 35/6
PBIND1 IDNAME;  %. SUPPORT FOR PROG                   PK:BINDING     77/8
PLUS U;   %. ADDITION OF SEVERAL ARGUMENTS            PK:EASY-SL     194/29
PNTH(U, N);  %. POINTER TO N-TH ELEMENT OF LIST       PK:EASY-NON-SL 269/44
POSN();  %. NUMBER OF CHARACTERS SINCE LAST EOL       PK:OTHER-IO    58/6
PRIN1 ITM;  %. CHANNELPRIN1 TO CURRENT OUTPUT         PK:PRINTERS    516/35
PRIN2 ITM;  %. CHANNELPRIN2 TO CURRENT CHANNEL        PK:PRINTERS    474/32
PRIN2L ITM;  %. PRIN2 WITHOUT TOP-LEVEL PARENS        PK:PRINTF      193/8
PRIN2T U;  %. PRIN2 AND TERPRI                        PK:EASY-NON-SL 338/51
PRINT U;   %. DISPLAY U AND TERMINATE LINE            PK:EASY-SL     350/55
PRINTF(FORMATFORPRINTF!*, A1, A2, A3, A4, A5,         PK:PRINTF      27/1
PRINTF1 EXPR 15)                                      PK:PRINTF      37/2
PRINTF2 PRINTFARGS; %. FORMATTED PRINT                PK:PRINTF      61/3
PRINTWITHFRESHLINE X;                                 PK:TOP-LOOP    191/12
PROG PROGBODY!*; %. PROGRAM FEATURE FUNCTION          PK:PROG-AND-FR 24/1
PROG2(U, V);  %. RETURN SECOND ARGUMENT               PK:EASY-SL     110/12
PROGBIND V;                                           PK:FAST-BINDER 30/2
PROGN U;  %. SEQUENTIAL EVALUATION, RETURN LAST       PK:EASY-SL     113/13
PROP U;  %. ACCESS PROPERTY LIST OF U                 PK:PROPERTY-LI 33/1
PUT(U, INDICATOR, VAL); %. STORE VAL IN U WITH INDICA PK:PROPERTY-LI 118/10
PUTC(NAME, IND, EXP); %. USED BY RLISP TO DEFINE SMAC PK:EASY-NON-SL 387/58
PUTD(FNNAME, FNTYPE, FNEXP); %. INSTALL FUNCTION DEFI PK:PUTD-GETD   64/3
PUTENTRY(NAME, TYPE, OFFSET);                         PK:FASLIN      137/6
PUTV(VEC, I, VAL); %. STORE VAL AT I'TH POSITION OF V PK:VECTORS     36/2
QEDNTH(N,L);                                          PK:MINI-EDITOR 108/4
QUOTE U;  %. RETURN UNEVALUATED ARGUMENT              PK:EASY-SL     334/52
RANGEERROR(OBJECT, INDEX, FN);                        PK:ERROR-HANDL 37/2
RASSOC(U, V); %. REVERSE ASSOC, COMPARE WITH CDR OF E PK:EASY-NON-SL 187/30
RATOM(); %. READ TOKEN FROM CURRENT INPUT             PK:TOKEN-SCANN 459/8
RDS CHANNEL;  %. SWITCH INPUT CHANNELS, RETURN OLD    PK:RDS-WRS     22/1
READ();   %. PARSE S-EXPR FROM CURRENT INPUT          PK:READ        52/3
READCH();  %. READ A SINGLE CHARACTER ID              PK:OTHER-IO    75/10
READCHAR();  %. READ SINGLE CHAR FROM CURRENT INPUT   PK:CHAR-IO     44/2
READINBUF();                                          PK:TOKEN-SCANN 80/1
READLINE();                                           PK:TOKEN-SCANN 525/16
READONLYCHANNEL(CHN, CH);                             PK:IO-ERRORS   20/3
RECIP N;   %. FLOATING POINT RECIPROCAL               PK:EASY-NON-SL 84/11
RECLAIM();                                            PK:COPYING-GC  58/1
RECLAIM();  %. USER CALL TO GARBAGE COLLECTOR         PK:COMPACTING- 159/1
RECURSIVECHANNELPRIN1(CHANNEL, ITM, LEVEL);           PK:PRINTERS    480/34
RECURSIVECHANNELPRIN2(CHANNEL, ITM, LEVEL);           PK:PRINTERS    438/31
REDO N;   %. RE-EVALUATE NTH INPUT                    PK:TOP-LOOP    148/6
RELOAD U;                                             PK:LOAD        63/3
RELOCINFINF X;                                        PK:FASL-INCLUD 34/4
RELOCINFTAG X;                                        PK:FASL-INCLUD 31/3
RELOCRIGHTHALFINF X;                                  PK:FASL-INCLUD 28/2
RELOCRIGHTHALFTAG X;                                  PK:FASL-INCLUD 25/1
RELOCWORDINF X;                                       PK:FASL-INCLUD 40/6
RELOCWORDTAG X;                                       PK:FASL-INCLUD 37/5
REMD U;   %. REMOVE FUNCTION DEFINITION OF U          PK:PUTD-GETD   46/2
REMFLAG(IDLIST, INDICATOR); %. REMOVE MARKING OF ALL  PK:PROPERTY-LI 106/8
REMFLAG1(U, INDICATOR);                               PK:PROPERTY-LI 112/9
REMOB U;  %. REMOVE ID FROM OBLIST                    PK:OBLIST      135/8
REMPROP(U, INDICATOR); %. REMOVE VALUE OF U WITH INDI PK:PROPERTY-LI 132/11
REMPROPL(L, INDICATOR); %. REMPROP FOR ALL IDS IN L   PK:PROPERTY-LI 141/12
REMQUOTE X;                                           PK:ARITHMETIC  255/20
REPEAT U;                                             PK:LOOP-MACROS 72/5
REST U;   %. TAIL OF A LIST                           PK:EASY-NON-SL 107/17
RESTOREENVIRONMENT PTR; %. RESTORE OLD BINDINGS       PK:BINDING     50/4
RETURN U;  %. RETURN VALUE FROM PROG                  PK:PROG-AND-FR 63/3
RETURNFIRSTARG ARG;                                   PK:ARITHMETIC  226/14
RETURNNIL();                                          PK:ARITHMETIC  223/13
REVERSE U;  %. TOP-LEVEL REVERSE OF LIST              PK:EASY-SL     308/47
REVERSIP U; %. DESTRUCTIVE REVERSE (REVERSE IN PLACE) PK:EASY-NON-SL 113/18
ROBUSTEXPAND(L, FN, EMPTYCASE); %. EXPAND + ARG FOR E PK:EASY-SL     326/50
RPLACA(U, V);  %. REPLACE CAR OF PAIR                 PK:KNOWN-TO-CO 57/11
RPLACD(U, V);  %. REPLACE CDR OF PAIR                 PK:KNOWN-TO-CO 60/12
RPLACEALL(A,NEW,S);                                   PK:MINI-EDITOR 115/6
RPLACW(A, B);  %. REPLACE WHOLE PAIR                  PK:EASY-NON-SL 237/38
SAFECAR U;                                            PK:CARCDR      132/25
SAFECDR U;                                            PK:CARCDR      136/26
SASSOC(U, V, FN); %. RETURN FIRST (U . XXX) IN V, OR  PK:EASY-SL     256/39
SAVESYSTEM(BANNER, FILE, INITFORMS);                  PK:TOP-LOOP    194/13
SCANNERERROR MESSAGE;                                 PK:TOKEN-SCANN 511/14
SCANPOSSIBLEDIPHTHONG(CHANNEL, STARTCHAR);            PK:TOKEN-SCANN 514/15
SECOND U;  %. SECOND ELEMENT OF A LIST                PK:EASY-NON-SL 98/14
SET(EXP, VAL);  %. ASSIGN VAL TO ID EXP               PK:SYMBOL-VALU 40/4
SETF U;   %. GENERAL ASSIGNMENT MACRO                 PK:LISP-MACROS 45/2
SETINDX(R1, R2, R3); %. STORE AT INDEX OF SEQUENCE    PK:SEQUENCE    58/2
SETMACROREFERENCE U;                                  PK:DEFINE-SMAC 26/2
SETPROP(U, L);  %. STORE L AS PROPERTY LIST OF U      PK:PROPERTY-LI 37/2
SETQ U;   %. STANDARD NAMED VARIABLE ASSIGNMENT       PK:EASY-SL     95/11
SETSUB(R1, R2, R3, R4); %. OBSOLETE SUBSEQUENCE FUNCT PK:SEQUENCE    170/5
SETSUBSEQ(R1, R2, R3, R4); % R2 IS LOWER BOUND, R3 UP PK:SEQUENCE    173/6
SIZE S;  %. UPPER BOUND OF SEQUENCE                   PK:SEQUENCE    321/8
SPACES N;  %. PRIN2 N SPACES                          PK:EASY-NON-SL 344/53
STANDARDLISP();  %. LISP TOP LOOP                     PK:TOP-LOOP    186/11
STATICINTFLOAT ARG;                                   PK:ARITHMETIC  233/15
STDERROR MESSAGE; %. ERROR WITHOUT NUMBER             PK:ERROR-HANDL 40/3
STRING U; %. ANALOGOUS TO LIST, STRING CONSTRUCTOR    PK:SEQUENCE    396/14
STRING2LIST S;  %. MAKE LIST WITH ASCII VALUES IN S   PK:TYPE-CONVER 106/12
STRING2VECTOR U; %. MAKE VECTOR OF ASCII VALUES IN U  PK:TYPE-CONVER 75/9
STRINGEQUAL(U, V); % EQSTR WITHOUT TYPECHECKING OR EQ PK:EQUAL       65/4
STRINGGENSYM();  %. GENERATE UNIQUE STRING            PK:STRING-GENS 20/1
STRINGGENSYM1 N;  %. AUXILIARY FUNCTION FOR STRINGGEN PK:STRING-GENS 23/2
STRINGP U;  %. IS U A STRING?                         PK:KNOWN-TO-CO 38/7
STUPIDPARSERFIX X;                                    PK:ARITHMETIC  249/19
SUB(R1, R2, R3); %. OBSOLETE SUBSEQUENCE FUNCTION     PK:SEQUENCE    103/3
SUBLA(U,V); %. EQ VERSION OF SUBLIS, REPLACES ATOMS O PK:EASY-NON-SL 228/37
SUBLIS(X, Y);  %. SUBSTITUTION IN Y BY A-LIST X       PK:EASY-SL     267/41
SUBSEQ(R1, R2, R3); % R2 IS LOWER BOUND, R3 UPPER     PK:SEQUENCE    106/4
SUBST(A, X, L);  %. REPLACE EVERY X IN L WITH A       PK:EASY-SL     316/48
SUBSTIP(A, X, L); %. DESTRUCTIVE VERSION OF SUBST     PK:EASY-NON-SL 127/20
SUBSTIP1(A, X, L); % AUXILIARY FUNCTION FOR SUBSTIP   PK:EASY-NON-SL 122/19
SYS2FIXN N;                                           PK:TYPE-CONVER 60/7
SYS2INT N;  %. CONVERT WORD TO LISP NUMBER            PK:TYPE-CONVER 56/6
SYSPOWEROF2P NUM;                                     PK:TOKEN-SCANN 500/13
TAB N;   %. SPACES TO COLUMN N                        PK:EASY-NON-SL 356/55
TCONC(PTR, ELEM); %. ACONC MAINTAINING POINTER TO END PK:EASY-NON-SL 278/46
TERPRI();  %. TERMINATE CURRENT OUTPUT LINE           PK:OTHER-IO    82/12
THIRD U;  %. THIRD ELEMENT OF A LIST                  PK:EASY-NON-SL 101/15
THROW(TAG, VALUE);                                    PK:CATCH-THROW 179/21
THROWAUX EXPR 3)                                      PK:CATCH-THROW 173/20
TIME();   %. GET RUN-TIME IN MILLISECONDS             PK:TOP-LOOP    183/10
TIMES U;  %. MULTIPLICATION OF SEVERAL ARGUMENTS      PK:EASY-SL     197/30
TOPLOOP(TOPLOOPREAD!*, %. GENERALIZED TOP-LOOP MECHAN PK:TOP-LOOP    56/1
TOSTRINGWRITECHAR(CHANNEL, CH); % SHARES TOKENBUFFER  PK:PRINTF      162/5
TOTALCOPY S;  %. UNIQUE COPY OF ENTIRE STRUCTURE      PK:COPIERS     79/8
TR L;   %. TRACE FUNCTIONS IN L                       PK:MINI-TRACE  87/4
TR!.1 NAM;   % CALLED TO TRACE A SINGLE FUNCTION      PK:MINI-TRACE  52/2
TR!.PRC(PN, B, A);  % CALLED IN PLACE OF TRACED CODE  PK:MINI-TRACE  26/1
TRCLR();   %. CALLED TO SETUP OR FIX TRACE            PK:MINI-TRACE  102/9
TRMAKEARGLIST N;  % GET ARGLIST FOR N ARGS            PK:MINI-TRACE  99/8
TWOARGDISPATCH(FIRSTARG, SECONDARG);                  PK:ARITHMETIC  44/1
TWOARGDISPATCH1 EXPR 4)                               PK:ARITHMETIC  47/2
TWOARGERROR(FIRSTARG, SECONDARG, DISPATCHTABLE);      PK:ARITHMETIC  132/3
TYI();  %. READ ASCII VALUE FROM CURENT INPUT         PK:IO-EXTENSIO 24/3
TYO CH;  %. WRITE ASCII VALUE TO CURRENT OUTPUT       PK:IO-EXTENSIO 27/4
TYPEERROR(OFFENDER, FN, TYP);                         PK:TYPE-ERRORS 17/1
UNBINDN N;  %. SUPPORT FOR LAMBDA AND PROG INTERP     PK:BINDING     60/6
UNBOUNDP U;  %. DOES U NOT HAVE A VALUE?              PK:SYMBOL-VALU 13/1
UNBR L;   %. UNBREAK FUNCTIONS IN L                   PK:MINI-TRACE  203/15
UNBR!.1 NAM;                                          PK:MINI-TRACE  186/12
UNFLUID IDLIST;  %. UNDECLARE ALL IN IDLIST AS FLUID  PK:FLUID-GLOBA 61/9
UNFLUID1 U;                                           PK:FLUID-GLOBA 64/10
UNION(X, Y);  %. SET UNION                            PK:SETS        28/5
UNIONQ(X, Y);  %. EQ VERSION OF UNION                 PK:SETS        32/6
UNREADCHAR CH;  %. BACKUP ON CURRENT INPUT CHANNEL    PK:CHAR-IO     82/6
UNTR L;   %. UNTRACE FUNCTION IN L                    PK:MINI-TRACE  93/6
UNTR!.1 NAM;                                          PK:MINI-TRACE  76/3
UNWIND!-ALL U;                                        PK:CATCH-THROW 40/2
UNWIND!-PROTECT U;                                    PK:CATCH-THROW 49/3
UPBV V;  %. UPPER LIMIT OF VECTOR V                   PK:VECTORS     53/3
UPDATEALLBASES();                                     PK:COMPACTING- 337/12
UPDATEHEAP();                                         PK:COMPACTING- 360/15
UPDATEITEM PTR;                                       PK:COMPACTING- 400/16
UPDATEREGION(LOW, HIGH);                              PK:COMPACTING- 357/14
UPDATESYMBOLS();                                      PK:COMPACTING- 347/13
USAGETYPEERROR(OFFENDER, FN, TYP, USAGE);             PK:TYPE-ERRORS 21/2
VALUECELL U;  %. SAFE ACCESS TO SYMVAL ENTRY          PK:SYMBOL-VALU 25/3
VECTOR U; %. ANALOGOUS TO LIST, VECTOR CONSTRUCTOR    PK:SEQUENCE    399/15
VECTOR2LIST V;  %. CONVERT VECTOR TO LIST             PK:TYPE-CONVER 125/14
VECTOR2STRING V; %. MAKE STRING WITH ASCII VALUES IN  PK:TYPE-CONVER 85/10
VECTOREQUAL(U, V); % VECTOR EQUALITY WITHOUT TYPE CHE PK:EQUAL       105/7
VECTORP U;  %. IS U A VECTOR?                         PK:KNOWN-TO-CO 41/8
VERBOSEBACKTRACE();                                   PK:BACKTRACE   44/4
WHILE U;  %. ITERATION MACRO                          PK:LOOP-MACROS 60/4
WORDSEQUAL(U, V);                                     PK:EQUAL       79/5
WRITECHAR CH;  %. WRITE SINGLE CHAR TO CURRENT OUTPUT PK:CHAR-IO     69/4
WRITENUMBER1(CHANNEL, NUMBER, RADIX);                 PK:PRINTERS    112/5
WRITEONLYCHANNEL CHN;                                 PK:IO-ERRORS   17/2
WRITESTRING S;                                        PK:PRINTERS    93/3
WRITESYSINTEGER(NUMBER, RADIX);                       PK:PRINTERS    134/8
WRS CHANNEL;  %. SWITCH OUTPUT CHANNELS, RETURN OLD   PK:RDS-WRS     35/2
XCHANGE(S,CTL,NEW,N);                                 PK:MINI-EDITOR 128/8
XCONS(U, V);  %. EXCHANGED CONS                       PK:CONS-MKVECT 46/3
XCONS(U, V);  %. V . U                                PK:COMP-SUPPOR 18/2
XINS(S,CTL,NEW,N);                                    PK:MINI-EDITOR 133/9
XN(U, V);  %. SET INTERSECTION                        PK:SETS        36/7
XNQ(U, V);  %. EQ VERSION OF XN                       PK:SETS        41/8
YESP U;                                               PK:ERROR-HANDL 43/4
-------


